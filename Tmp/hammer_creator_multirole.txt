Please write a python program named 'hammer_creator_advanced.py' that will:

* Accept as '-K' a mandatory integer Kmer-length command-line argument;
        
* Read a FASTA-formatted file from 'STDIN' using BioPython,
and foreach FASTA entry extract the following:

  - The portion of the FASTA header up to the first whitespace-character is the
  "feature-ID" ('fid') for the FASTA entry;
  the remainder of the FASTA header starting with the first non-whitespace character
  after the whitespace is that feature's "role".
  There may be more than one whitespace-character separating the feature-ID
  from its role.
  Please extract the feature-ID and the role frome the FASTA header,
  then convert the sequence to lower-case,
  and build dictionaries mapping feature-IDs to sequences,
  and feature-IDs to their roles.

  - Each feature-ID has the format 'fig|x.y.peg.z', where 'x', 'y', and 'z' are integers,
  and the 'fig|' and '.peg' portions are literal strings, not variables.
  The substring 'x.y' is the 'genome_id' for the feature;
  please use a regular expression to extract the genome-ID from the feature-ID,
  and build a dictionary mapping feature-IDs to genome-IDs. 

  - Return the dictionary mapping feature-IDs to genomes,
  the dictionary mapping feature-IDs to roles,
  and the dictionary mapping feature-IDs to sequences.

* Print a tab-separated header-line to STDOUT, whose column-names are
  "hammer", "fid", and "role".

* Create an empty "dictionary of dictionaries" whose outer-keys will be Kmers,
  inner-keys will be feature-IDs, and inner-values will be integer counts.

* Foreach sequence, find all of its Kmers, and foreach Kmer
  increment the count for that sequence's feature-ID
  in the dictionary-of-dictionaries.

* A "hammer" is defined as a Kmer that occur exactly once in exactly one genome-ID.
  Each feature-ID can only occur in one genome.
  So if a Kmer occurs with a count of '1' in exactly one feature, 
  then it must be a "hammer".
  Find all of the "hammers" in the dictionary-of-dictionaries,
  and print to STDOUT a three-column table table of "hammer", "feature-ID",
  and "role" for that feature-ID, sorted by hammer.

* Finally, please print to 'STDERR' the number of sequences that were read,
  the number of Kmers that were processed, and the number of Kmers that were hammers,
  then exit.