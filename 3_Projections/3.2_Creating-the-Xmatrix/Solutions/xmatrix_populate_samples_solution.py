########################################################################
#...Prompt that generated this program:
"""

"""

########################################################################
#...Pseudocode for this program:
"""

"""

########################################################################
#...Code generated by Grimoire:

# xmatrix_populate_samples.py

import os

def extract_sra_accession_numbers(directory):
    # Extract SRA run accession numbers from filenames in the given directory
    return [filename.split('.')[0] for filename in os.listdir(directory) if filename.endswith('.tsv')]

def populate_xmatrix_with_samples(xmatrix_file, controls_dir, diseased_dir, output_file):
    # Extract SRA accession numbers from both directories
    control_samples = extract_sra_accession_numbers(controls_dir)
    diseased_samples = extract_sra_accession_numbers(diseased_dir)

    # Read the existing xmatrix file
    with open(xmatrix_file, 'r') as infile:
        headers = infile.readline().strip().split('\t')
        genome_ids = headers[1:-1]  # Exclude "Sample" and "Disease Label"

    # Open the output file to write the populated xmatrix
    with open(output_file, 'w') as outfile:
        # Write the headers
        outfile.write('\t'.join(headers) + '\n')

        # Write control samples
        for sample in control_samples:
            row = [sample] + ['0'] * len(genome_ids) + ['Control']
            outfile.write('\t'.join(row) + '\n')

        # Write diseased samples
        for sample in diseased_samples:
            row = [sample] + ['0'] * len(genome_ids) + ['Diseased']
            outfile.write('\t'.join(row) + '\n')

if __name__ == "__main__":
    # Define file paths and directories
    xmatrix_file = 'Data/xmatrix.tsv'
    controls_dir = 'Data/Controls'
    diseased_dir = 'Data/Diseased'
    output_file = 'Data/xmatrix_initialized.tsv'

    # Populate the xmatrix with samples
    populate_xmatrix_with_samples(xmatrix_file, controls_dir, diseased_dir, output_file)