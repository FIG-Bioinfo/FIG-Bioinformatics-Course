########################################################################
#...Prompt that generated this program:
"""

"""

########################################################################
#...Pseudocode for this program:
"""

"""

########################################################################
#...Code generated by Grimoire:

import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

xmatrix = pd.read_csv("Data/xmatrix.tsv", sep="\t")

X = xmatrix.drop(columns=["Disease Label"], axis=1)
y = xmatrix["Disease Label"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = RandomForestClassifier(n_estimators=100, max_depth=None, random_state=42)

clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

print(accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))
print(confusion_matrix(y_test, y_pred))

with open("model_results.txt", "w") as file:
    file.write("Model Results\n")
    file.write(f"Accuracy: {accuracy_score(y_test, y_pred)}\n")
    file.write(f"Classification Report: {classification_report(y_test, y_pred)}\n")
    file.write(f"Confusion Matrix: {confusion_matrix(y_test, y_pred)}\n\n")